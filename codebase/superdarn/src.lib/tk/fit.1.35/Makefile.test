# Makefile for building test_profile

# Compiler settings
CC = gcc
CFLAGS = -Wall -O3 -g -fPIC -I./include -I../../../../include
LDFLAGS = -L. -lfit.1.35 -lm

# Source files
SRC = src/fit.c src/fitscan.c src/fitcfit.c src/fitread.c src/fitwrite.c src/fitseek.c src/fitinx.c src/stubs.c src/option_stubs.c src/scandata_stubs.c src/radarbeam_stubs.c
OBJ = $(SRC:.c=.o)
LIB = libfit.1.35.a
TEST_SRC = test_profile.c
TEST_EXE = test_profile

# Default target
all: $(LIB) $(TEST_EXE)

# Build the test executable
$(TEST_EXE): $(TEST_SRC) $(LIB)
	$(CC) $(CFLAGS) -o $@ $(TEST_SRC) $(LDFLAGS)

# Build the library
$(LIB): $(OBJ)
	ar rcs $@ $^

# Compile source files
%.o: %.c
	$(CC) $(CFLAGS) -c -o $@ $<

# Clean up
clean:
	rm -f $(OBJ) $(LIB) $(TEST_EXE) gmon.out

# Run the test
run: $(TEST_EXE)
	./$(TEST_EXE)

# Run with gprof
profile: CFLAGS += -pg
profile: LDFLAGS += -pg
profile: clean $(TEST_EXE)
	./$(TEST_EXE)
	gprof $(TEST_EXE) gmon.out > profile.txt
	@echo "Profile results written to profile.txt"

.PHONY: all clean run profile
