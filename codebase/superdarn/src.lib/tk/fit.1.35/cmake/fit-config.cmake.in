@PACKAGE_INIT@

include(CMakeFindDependencyMacro)

# Find required dependencies
find_dependency(Threads)

if(@ENABLE_CUDA@)
  find_package(CUDAToolkit REQUIRED)
endif()

# Include the targets file
include("${CMAKE_CURRENT_LIST_DIR}/@PROJECT_NAME@-targets.cmake")

# Add include directories
get_target_property(FIT_INCLUDE_DIRS @PROJECT_NAME@_@BUILD_TYPE@
  INTERFACE_INCLUDE_DIRECTORIES
)

# Add library directories
get_target_property(FIT_LIBRARY_DIRS @PROJECT_NAME@_@BUILD_TYPE@
  INTERFACE_LINK_DIRECTORIES
)

# Add link libraries
get_target_property(FIT_LIBRARIES @PROJECT_NAME@_@BUILD_TYPE@
  INTERFACE_LINK_LIBRARIES
)

# Create imported targets for easier use
add_library(@PROJECT_NAME@::@PROJECT_NAME@ ALIAS @PROJECT_NAME@_@BUILD_TYPE@)

# Version information
set(@PROJECT_NAME@_VERSION @PROJECT_VERSION@)

# Handle standard args
include(FindPackageHandleStandardArgs)
find_package_handle_standard_args(@PROJECT_NAME@
  REQUIRED_VARS @PROJECT_NAME@_LIBRARIES @PROJECT_NAME@_INCLUDE_DIRS
  VERSION_VAR @PROJECT_NAME@_VERSION
)
